@model u22749472_HW3.Models.DataViewModel
@{
    ViewBag.Title = "Maintain";
}

<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>
</head>

<div class="container">
    @*////////////////////////////////////////////////////////////   Authors  /////////////////////////////////////////////////////////*@
    <div class="row">
        <div class="col-6">
            <h3 class="float-left">Authors</h3>
            <p>
                @*@Html.ActionLink("Create New", "Create", "ListItemPriorities")*@
                <a href="#" class="btn btn-primary, float-right" style="background-color:dimgrey; padding: 5px 15px; font-size: 15px;"
                   data-toggle="modal" data-target="#ListItemPriorityModal">Create</a>
            </p>
            @*Modal Code for ListItemPriorities*@
            <div class="modal fade" id="ListItemPriorityModal">
                <!-- Modal content goes here -->
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="modal-title">
                                To Do List information
                            </div>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("Create", "authors", FormMethod.Post, new { id = "authors" }))
                            {
                                @Html.AntiForgeryToken()

                                <div class="form-group">
                                    @Html.LabelFor(model => model.newAuthor.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.newAuthor.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.newAuthor.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.newAuthor.surname, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.newAuthor.surname, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.newAuthor.surname, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="modal-footer">
                                    <button type="submit" id="btnSaveToDoList" value="Create" class="btn btn-primary">Save</button>
                                    <button type="button" id="btnCancel" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="edit2Modal" tabindex="-1" aria-labelledby="edit2ModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="edit2ModalLabel">Update Priority</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("Edit", "authors", FormMethod.Post, new { id = "edit2Form" }))
                            {
                                @Html.AntiForgeryToken()

                                @Html.HiddenFor(model => model.newAuthor.authorId) <!-- Make sure to include the PriorityID in the form -->

                                <div class="form-horizontal">
                                    <h4>ListItemPriority</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.newAuthor.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.newAuthor.name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.newAuthor.name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                     <div class="form-group">
                                        @Html.LabelFor(model => model.newAuthor.surname, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.newAuthor.surname, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.newAuthor.surname, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="details2Modal" tabindex="-1" aria-labelledby="details2ModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="details2ModalLabel">Prioritization</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("Edit", "authors", FormMethod.Post, new { id = "edit2Form" }))
                            {
                                @Html.AntiForgeryToken()

                                @Html.HiddenFor(model => model.newAuthor.authorId) <!-- Make sure to include the PriorityID in the form -->

                                <div class="form-horizontal">
                                    <h4>ListItemPriority</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.newAuthor.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.newAuthor.name, new { htmlAttributes = new { @class = "form-control", disable = "disabled" } })
                                            @Html.ValidationMessageFor(model => model.newAuthor.name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                     <div class="form-group">
                                        @Html.LabelFor(model => model.newAuthor.surname, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.newAuthor.surname, new { htmlAttributes = new { @class = "form-control", disable = "disabled" } })
                                            @Html.ValidationMessageFor(model => model.newAuthor.surname, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="delete2Modal" tabindex="-1" role="dialog" aria-labelledby="delete2ModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="delete2ModalLabel">Confirm Delete</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to delete this record?</p>
                        </div>
                        <div class="modal-footer">
                            @using (Html.BeginForm("Delete", "authors", new { id = 0 }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <input type="hidden" id="deletePriorityId" name="id" /> <!-- Hidden field to store the item ID to be deleted -->
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            }
                        </div>
                    </div>
                </div>
            </div>
            <table class="table table-light table-striped" id="myTable">
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Surname
                    </th>
                    <th>
                        CRUD
                    </th>
                </tr>
                @foreach (var item in Model.authors)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.surname)
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary edit2-button"
                                    data-toggle="modal" data-target="#edit2Modal"
                                    data-priorityid="@item.authorId" data-priorityname="@item.name">
                                Edit
                            </button>
                            <button type="button" class="btn btn-danger delete3-button"
                                    data-toggle="modal" data-target="#delete2Modal"
                                    data-priorityid="@item.authorId">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </table>
            <ul class="pagination" id="pagination">
                <!-- Pagination links will be generated here using JavaScript -->
            </ul>
        </div>


        @*////////////////////////////////////////////////////////////   Types /////////////////////////////////////////////////////////*@
        <div class="col-6">
            <h3 class="float-left">Types</h3>
            <p>
                @*@Html.ActionLink("Create New", "Create", "ListItems")*@
                <a href="#" class="btn btn-primary, float-right" style="background-color:dimgrey; padding: 5px 15px; font-size: 15px;"
                   data-toggle="modal" data-target="#ListItemModal">Create</a>
            </p>
            @*Modal Code for ListItems*@
            <div class="modal fade" id="ListItemModal">
                <!-- Modal content goes here -->
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div class="modal-title">
                                To Do List information
                            </div>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("Create", "types", FormMethod.Post, new { id = "types" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-group">
                                    @Html.LabelFor(model => model.newType.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.newType.name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.newType.name, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="modal-footer">
                                    <button type="submit" id="btnSaveToDoList" value="Create" class="btn btn-primary">Save</button>
                                    <button type="button" id="btnCancel" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                                </div>
                            }

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="editlModal" tabindex="-1" aria-labelledby="editlModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="editlModalLabel">Prioritization</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("Edit", "types", FormMethod.Post, new { id = "edit1Form" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    <h4>ListItem</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.HiddenFor(model => model.newType.name)
                                        @Html.LabelFor(model => model.newType.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.newType.name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.newType.name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Save" class="btn btn-default" />
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="detailslModal" tabindex="-1" aria-labelledby="detailslModalLabel" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="detailslModalLabel">Prioritization</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            @using (Html.BeginForm("Edit", "types", FormMethod.Post, new { id = "edit1Form" }))
                            {
                                @Html.AntiForgeryToken()
                                <div class="form-horizontal">
                                    <h4>ListItem</h4>
                                    <hr />
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    <div class="form-group">
                                        @Html.HiddenFor(model => model.newType.typeId)
                                        @Html.LabelFor(model => model.newType.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(model => model.newType.name, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                                            @Html.ValidationMessageFor(model => model.newType.name, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal fade" id="deletelModal" tabindex="-1" role="dialog" aria-labelledby="deletelModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="deletelModalLabel">Confirm Delete</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <p>Are you sure you want to delete this record?</p>
                        </div>
                        <div class="modal-footer">
                            @using (Html.BeginForm("Delete", "types", new { id = 0 }, FormMethod.Post))
                            {
                                @Html.AntiForgeryToken()

                                <input type="hidden" id="deleteListItemId" name="id" /> <!-- Hidden field to store the item ID to be deleted -->
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                <input type="submit" value="Delete" class="btn btn-danger" />
                            }
                        </div>
                    </div>
                </div>
            </div>
            <table class="table table-light table-striped" id="myTable">
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        CRUD
                    </th>
                </tr>
                @foreach (var item in Model.types)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.name)
                        </td>
                        <td>
                            <button type="button" class="btn btn-primary edit1-button"
                                    data-toggle="modal" data-target="#editlModal"
                                    data-listitemid="@item.typeId" data-description="@item.name">
                                Edit
                            </button>
                            <button type="button" class="btn btn-danger delete2-button"
                                    data-toggle="modal" data-target="#deletelModal"
                                    data-listitemid="@item.typeId">
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </table>
             <ul class="pagination" id="pagination">
                <!-- Pagination links will be generated here using JavaScript -->
            </ul>
        </div>

        @*////////////////////////////////////////////////////////////   Borrows  /////////////////////////////////////////////////////////*@
    <div class="row">
        <h3 class="float-right">Borrows</h3>
        <p>
            @*@Html.ActionLink("Create New", "Create", "ToDoLists")*@
            <a href="#" class="btn btn-primary, float-right" style="background-color:dimgrey; padding: 5px 15px; font-size: 15px;"
               data-toggle="modal" data-target="#ToDoItemModal">Create</a>
        </p>
        @*Modal Code for ToDoList*@
        <div class="modal fade" id="ToDoItemModal">
            <!-- Modal content goes here -->
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <div class="modal-title">
                            To Do List information
                        </div>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("Create", "borrows", FormMethod.Post, new { id = "borrows" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.takenDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.newBorrow.takenDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.newBorrow.takenDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.broughtDate, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.newBorrow.broughtDate, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.newBorrow.broughtDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.book, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.newBorrow.book.name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.newBorrow.book.name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.student.name, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.newBorrow.student.name, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.newBorrow.student.name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="modal-footer">
                                <button type="submit" id="btnSaveToDoList" value="Create" class="btn btn-primary">Save</button>
                                <button type="button" id="btnCancel" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        @*Edit, Delete, Details*@
        <div class="modal fade" id="editModal" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editModalLabel">Prioritization</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("Edit", "borrows", FormMethod.Post, new { id = "editForm" }))
                        {
                            @Html.AntiForgeryToken()

                            <!-- Add input fields for editing -->
                        
                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.takenDate, "Taken Date")
                                @Html.EditorFor(model => model.newBorrow.takenDate, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.broughtDate, "Brought Date")
                                @Html.EditorFor(model => model.newBorrow.broughtDate, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.book.name, "Book")
                                @Html.EditorFor(model => model.newBorrow.book.name, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.student.name, "Student")
                                @Html.EditorFor(model => model.newBorrow.student.name, new { @class = "form-control" })
                            </div>


                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                                <input type="submit" value="Save" class="btn btn-primary" form="editForm" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">s
                    <div class="modal-header">
                        <h5 class="modal-title" id="detailsModalLabel">Prioritization</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @using (Html.BeginForm("Edit", "borrows", FormMethod.Post, new { id = "editForm" }))
                        {
                            @Html.AntiForgeryToken()

                            <!-- Add input fields for editing -->
                         
                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.takenDate, "Taken Date")
                                @Html.EditorFor(model => model.newBorrow.takenDate, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.broughtDate, "Brought Date")
                                @Html.EditorFor(model => model.newBorrow.broughtDate, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.book.name, "Book")
                                @Html.EditorFor(model => model.newBorrow.book.name, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.newBorrow.student.name, "Student")
                                @Html.EditorFor(model => model.newBorrow.student.name, new { @class = "form-control" })
                            </div>

                            <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <p>Are you sure you want to delete this record?</p>
                    </div>
                    <div class="modal-footer">
                        @using (Html.BeginForm("Delete", "borrows", new { id = 0 }, FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()

                            <input type="hidden" id="deleteItemId" name="id" /> <!-- Hidden field to store the item ID to be deleted -->
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                            <input type="submit" value="Delete" class="btn btn-danger" />
                        }
                    </div>
                </div>
            </div>
        </div>
        <table class="table table-light table-striped" id="myTable">
            <tr>
                <th>
                    Taken Date
                </th>
                <th>
                    Brought Date
                </th>
                <th>
                    Book
                </th>
                <th>
                    Student
                </th>
                <th>
                    CRUD
                </th>
            </tr>
            @foreach (var item in Model.borrows)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.takenDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.broughtDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.book.name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.student.name)
                    </td>
                    <td>
                        <button type="button" class="btn btn-primary edit-button"
                                data-toggle="modal" data-target="#editModal"
                                data-borrowid="@item.borrowId" data-takendate="@item.takenDate" data-broughtdate="@item.broughtDate" data-book="@item.book" data-student="@item.student">
                            Edit
                        </button>
                        <button type="button" class="btn btn-danger delete-button"
                                data-toggle="modal" data-target="#deleteModal" data-borrowid="@item.borrowId">
                            Delete
                        </button>
                    </td>
                </tr>
            }
        </table>
        <ul class="pagination" id="pagination">
            <!-- Pagination links will be generated here using JavaScript -->
        </ul>
    </div>
</div>


@*Pagination*@
<script>
    // JavaScript code to dynamically generate pagination links
    const table = document.getElementById('myTable');
    const pagination = document.getElementById('pagination');
    const rowsPerPage = 10; // Number of rows per page

    const numRows = table.rows.length - 1; // Subtracting the header row
    const numPages = Math.ceil(numRows / rowsPerPage);

    for (let i = 1; i <= numPages; i++) {
        const li = document.createElement('li');
        li.className = 'page-item';
        const a = document.createElement('a');
        a.className = 'page-link';
        a.href = '#';
        a.innerText = i;
        li.appendChild(a);
        pagination.appendChild(li);
    }

    // Add event listeners to handle page navigation
    const pageLinks = document.querySelectorAll('.page-link');
    pageLinks.forEach((link, index) => {
        link.addEventListener('click', () => {
            showPage(index + 1); // Pages are 1-indexed
        });
    });

    // Function to display the specified page
    function showPage(pageNumber) {
        const start = (pageNumber - 1) * rowsPerPage;
        const end = start + rowsPerPage;

        for (let i = 1; i <= numRows; i++) {
            const row = table.rows[i];
            if (i > start && i <= end) {
                row.style.display = 'table-row';
            } else {
                row.style.display = 'none';
            }
        }
    }

    // Show the first page by default
    showPage(1);
</script>



@*ToDo List scripts*@
<script>
    $(document).ready(function () {
        $('.edit-button').click(function () {
            var taskId = $(this).data('taskid');
            var listItemID = $(this).data('listitemid');
            var dueDate = $(this).data('duedate');
            var priorityID = $(this).data('priorityid');

            $('#editModal #NewToDoList_TaskID').val(taskId);
            $('#editModal #NewToDoList_ListItemID').val(listItemID);
            $('#editModal #NewToDoList_DueDate').val(dueDate);
            $('#editModal #NewToDoList_PriorityID').val(priorityID);
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('.details-button').click(function () {
            var taskId = $(this).data('taskid');
            var listItemID = $(this).data('listitemid');
            var dueDate = $(this).data('duedate');
            var priorityID = $(this).data('priorityid');

            $('#detailsModal #NewToDoList_TaskID').val(taskId);
            $('#detailsModal #NewToDoList_ListItemID').val(listItemID);
            $('#detailsModal #NewToDoList_DueDate').val(dueDate);
            $('#detailsModal #NewToDoList_PriorityID').val(priorityID);
        });
    });
</script>
<script>
    $('.delete-button').click(function () {
        var itemId = $(this).data('taskid'); // Get the item ID from the data-taskid attribute
        $('#deleteItemId').val(itemId); // Set the value of the hidden input field

        // Update the form's action URL to include the item ID
        $('#deleteModal form').attr('action', '/ToDoLists/Delete/' + itemId);
    });
</script>

@*ListItem*@
<script>
    $(document).ready(function () {
        $('.edit1-button').click(function () {
            var listItemID = $(this).data('listitemid');
            var description = $(this).data('description');

            $('#editlModal #NewListItem_ListItemID').val(listItemID);
            $('#editlModal #NewListItem_Description').val(description);
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('.details1-button').click(function () {
            var listItemID = $(this).data('listitemid');
            var description = $(this).data('description');

            $('#detailslModal #NewListItem_ListItemID').val(listItemID);
            $('#detailslModal #NewListItem_Description').val(description);
        });
    });
</script>
<script>
    $('.delete2-button').click(function () {
        var listitemId = $(this).data('listitemid'); // Get the item ID from the data-taskid attribute
        $('#deleteListItemId').val(listitemId); // Set the value of the hidden input field

        // Update the form's action URL to include the item ID
        $('#deletelModal form').attr('action', '/ListItems/Delete/' + listitemId);
    });
</script>

@*ListItem Priorities*@
<script>
    $(document).ready(function () {
        $('.edit2-button').click(function () {
            var priorityID = $(this).data('priorityid');
            var priorityname = $(this).data('priorityname');

            $('#edit2Modal #NewListItemPriority_PriorityID').val(priorityID);
            $('#edit2Modal #NewListItemPriority_PriorityName').val(priorityname);
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('.details2-button').click(function () {
            var priorityID = $(this).data('priorityid');
            var priorityName = $(this).data('priorityname');

            $('#details2Modal #NewListItemPriority_PriorityID').val(priorityID);
            $('#details2Modal #NewListItemPriority_PriorityName').val(priorityName);
        });
    });
</script>
<script>
    $('.delete3-button').click(function () {
        var priorityId = $(this).data('priorityid'); // Get the item ID from the data-taskid attribute
        $('#deletePriorityId').val(priorityId); // Set the value of the hidden input field

        // Update the form's action URL to include the item ID
        $('#delete2Modal form').attr('action', '/ListItemPriorities/Delete/' + priorityId);
    });
</script>